<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.therapeutenkiller.haushaltsbuch</groupId>
    <artifactId>haushaltsbuch</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>${project.artifactId}-${project.version}</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Diese Eigenschaften konfigurieren maven-compiler-plaugin und maven-pmd-plugin und macht
        die explizite Konfiguration der Plugins überflüssig -->

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.version>3.3</maven.compiler.version>

        <!-- Benutze die selbe Checkstype Version, wie das IntelliJ Plugin ! -->
        <checkstyle.version>6.14.1</checkstyle.version>

        <!-- Version für die Codierungunterastützung mit Richtlinien und Aspekten -->
        <version.de.therapeutenkiller.coding>0.0.26-SNAPSHOT</version.de.therapeutenkiller.coding>


        <version.deltaspike>1.5.2</version.deltaspike>
        <version.weld.se>2.3.1.Final</version.weld.se>

        <slf4j.version>1.7.13</slf4j.version>
        <junit.version>4.12</junit.version>
        <junit.version>4.12</junit.version>
        <maven.dependency.plugin.version>2.10</maven.dependency.plugin.version>
        <maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>

        <skipTests>false</skipTests>
        <groovy.version>2.4.5</groovy.version>
        <groovy.classifier>indy</groovy.classifier>

        <h2.version>1.4.191</h2.version>
        <hibernate.version>5.0.7.Final</hibernate.version>
        <version.jboss.bom>10.0.0.Final</version.jboss.bom>

    </properties>

    <scm>
        <developerConnection>scm:git:http://localhost/matthias/haushaltsbuch.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.therapeutenkiller.haushaltsbuch</groupId>
                <artifactId>dominium</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.therapeutenkiller.haushaltsbuch</groupId>
                <artifactId>dominium-persistenz-jpa</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.therapeutenkiller.haushaltsbuch</groupId>
                <artifactId>domaene</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.therapeutenkiller.haushaltsbuch</groupId>
                <artifactId>infrastruktur</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.therapeutenkiller.haushaltsbuch</groupId>
                <artifactId>dominium-persistenz-atom</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.2.0</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach coding.bom -->
            <dependency>
                <groupId>de.therapeutenkiller</groupId>
                <artifactId>aspekte</artifactId>
                <version>${version.de.therapeutenkiller.coding}</version>
            </dependency>

            <!-- auslagern nach coding.bom -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.4</version>
            </dependency>

            <!-- auslagern nach coding.bom -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <!-- version>19.0</version -->
                <version>14.0.1</version>
                <!-- Höhere Versionen führen zu einem Konflikt im Zusammenhang mit Weld Embedded und Arquillian -->
            </dependency>

            <!-- auslagern nach jee.bom -->
            <!--dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>7.0</version>
                <scope>provided</scope>
            </dependency-->

            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-javaee7-with-tools</artifactId>
                <version>${version.jboss.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Abhängigkeiten für die Komponententests -->
            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>1.0-groovy-2.4</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Spock: zum Mocken erforderlich -->
            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>3.2.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <classifier>${groovy.classifier}</classifier>
            </dependency>

            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-java8</artifactId>
                <version>1.2.4</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>1.2.4</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach test.bom -->
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-weld</artifactId>
                <version>1.2.4</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach test-bom -->
            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>1.7.5</version>
                <scope>test</scope>
            </dependency>

            <!-- Test-Infrastruktur -->

            <!-- Für die Integrationstests wird Deltaspike verwendet, weil Arquillian
            nicht immer so gut funktioniert -->
            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.core</groupId>
                <artifactId>deltaspike-core-api</artifactId>
                <version>${version.deltaspike}</version>
                <scope>compile</scope>
            </dependency>

            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.core</groupId>
                <artifactId>deltaspike-core-impl</artifactId>
                <version>${version.deltaspike}</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach jee.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.cdictrl</groupId>
                <artifactId>deltaspike-cdictrl-api</artifactId>
                <version>${version.deltaspike}</version>
                <scope>compile</scope>
            </dependency>

            <!-- auslagern nach jee.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-jpa-module-api</artifactId>
                <version>${version.deltaspike}</version>
                <scope>compile</scope>
            </dependency>

            <!-- auslagern nach jee.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-jpa-module-impl</artifactId>
                <version>${version.deltaspike}</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-test-control-module-api</artifactId>
                <version>${version.deltaspike}</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-test-control-module-impl</artifactId>
                <version>${version.deltaspike}</version>
                <scope>test</scope>
            </dependency>

            <!-- Dependency Injection für Java EE, Arquillian Wildfly Embedded und Deltaspike -->
            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se</artifactId>
                <version>${version.weld.se}</version>
                <scope>test</scope>
            </dependency>

            <!-- Ohne das läuft nichts: org.jboss.jandex.ClassInfo.hasNoArgsConstructor()Z -->
            <!-- siehe http://stackoverflow.com/questions/25797866/hibernate-makes-weld-not-initializing-in-java-se -->
            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jandex</artifactId>
                <version>2.0.0.Final</version>
                <scope>test</scope>
            </dependency>

            <!-- Alles für Arquillian -->
            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.1.9.Final</version>
                <!-- version>1.1.10.Final</version -->
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>2.2.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- auslagern nach jee-test.bom -->
            <dependency>
                <groupId>org.apache.deltaspike.cdictrl</groupId>
                <artifactId>deltaspike-cdictrl-weld</artifactId>
                <version>${version.deltaspike}</version>
                <scope>test</scope>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>de.therapeutenkiller</groupId>
            <artifactId>aspekte</artifactId>
            <version>${version.de.therapeutenkiller.coding}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>2.19.1</version>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included in WildFly -->
        <!--dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency-->
        <!-- Import the Common Annotations API (JSR-250), we use provided scope
        as the API is included in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Servlet API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
        </extensions>

        <pluginManagement>
            <plugins>
                <!-- aspectj -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>test-compile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <complianceLevel>1.8</complianceLevel>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                    </configuration>
                </plugin>

                <!-- gmavenplus (für Tests mit Spock-Framework -->

                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <targetBytecode>1.8</targetBytecode>
                        <warningLevel>2</warningLevel>
                        <invokeDynamic>true</invokeDynamic>
                    </configuration>
                </plugin>


                <!-- checkstyle -->
                <!-- TODO: auslagern nach test.bom -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.17</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                        <dependency>
                            <artifactId>richtlinien</artifactId>
                            <groupId>de.therapeutenkiller</groupId>
                            <version>${version.de.therapeutenkiller.coding}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <includeResources>true</includeResources>
                        <detail>true</detail>

                        <skip>${skipTests}</skip>
                        <configLocation>codingrules/checkstyle.xml</configLocation>
                        <failsOnError>true</failsOnError>
                        <consoleOutput>true</consoleOutput>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- pmd -->
                <!-- This version of Maven PMD Plugin uses PMD 5.3.2 and requires Java 1.6. -->
                <!-- TODO: auslagern nach test.bom -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.6</version>
                    <dependencies>
                        <dependency>
                            <artifactId>richtlinien</artifactId>
                            <groupId>de.therapeutenkiller</groupId>
                            <version>${version.de.therapeutenkiller.coding}</version>
                        </dependency>
                    </dependencies>

                    <configuration>
                        <skip>${skipTests}</skip>
                        <linkXRef>false</linkXRef>
                        <verbose>true</verbose>
                        <includeTests>true</includeTests>
                        <rulesets>
                            <ruleset>codingrules/pmd-ruleset.xml</ruleset>
                        </rulesets>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                                <goal>cpd-check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <!-- gmavenplus (für Tests mit Spock-Framework) -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <configuration>
                    <detail>true</detail>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>de.therapeutenkiller</groupId>
                            <artifactId>aspekte</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>release-deployment</id>
            <name>Internal Releases</name>
            <url>http://development12:8081/nexus/content/repositories/releases/</url>
        </repository>

        <snapshotRepository>
            <id>schnappschuss-deployment</id>
            <name>Internal Snapshots</name>
            <url>http://development12:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>

    </distributionManagement>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.8</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.19.1</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>arquillian-wildfly-embedded</id>
            <properties>
                <arquillian.version>1.1.9.Final</arquillian.version>

                <wildfly.version>8.2.1.Final</wildfly.version>
            </properties>
            <dependencyManagement>

                <dependencies>
                </dependencies>
            </dependencyManagement>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources-wildfly-embedded</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven.dependency.plugin.version}</version>
                        <executions>
                            <!-- Entpackt Wildfly ins target-Verzeichnis -->
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Tests ausführen; Kann auch mit failsafe-Plugin für Integrationstests geschehen. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven.surefire.plugin.version}</version>
                        <configuration>
                            <systemPropertyVariables>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <jboss.home>${project.build.directory}/wildfly-${wildfly.version}</jboss.home>
                                <module.path>${project.build.directory}/wildfly-${wildfly.version}/modules</module.path>
                            </systemPropertyVariables>
                            <redirectTestOutputToFile>false</redirectTestOutputToFile>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <modules>
        <module>domaene</module>
        <module>infrastruktur</module>
        <module>dominium</module>
        <module>dominium-persistenz-jpa</module>
        <module>anwendung</module>
        <module>coding</module>
        <module>dominium-persistenz-atom</module>
    </modules>
</project>

